{"mappings":"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","sources":["<anon>","js/controller.js","js/model.js","js/view/formView.js","js/view/historyView.js","js/utilities/helpers.js","node_modules/date-fns/esm/isToday/index.js","node_modules/date-fns/esm/isSameDay/index.js","node_modules/date-fns/esm/startOfDay/index.js","node_modules/date-fns/esm/toDate/index.js","node_modules/@babel/runtime/helpers/esm/typeof.js","node_modules/date-fns/esm/_lib/requiredArgs/index.js","node_modules/date-fns/esm/formatDistanceToNow/index.js","node_modules/date-fns/esm/formatDistance/index.js","node_modules/date-fns/esm/_lib/defaultOptions/index.js","node_modules/date-fns/esm/compareAsc/index.js","node_modules/date-fns/esm/differenceInMonths/index.js","node_modules/date-fns/esm/differenceInCalendarMonths/index.js","node_modules/date-fns/esm/isLastDayOfMonth/index.js","node_modules/date-fns/esm/endOfDay/index.js","node_modules/date-fns/esm/endOfMonth/index.js","node_modules/date-fns/esm/differenceInSeconds/index.js","node_modules/date-fns/esm/differenceInMilliseconds/index.js","node_modules/date-fns/esm/_lib/roundingMethods/index.js","node_modules/date-fns/esm/_lib/defaultLocale/index.js","node_modules/date-fns/esm/locale/en-US/index.js","node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","node_modules/date-fns/esm/_lib/cloneObject/index.js","node_modules/date-fns/esm/_lib/assign/index.js","node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","js/view/summaryView.js"],"sourcesContent":["const $f381a3c3b9cf5311$export$ca000e230c0caa3e = {\n    summary: {\n        income: 0,\n        expenses: 0,\n        netIncome: 0\n    },\n    history: []\n};\nfunction $f381a3c3b9cf5311$var$persistHistory() {\n    localStorage.setItem(\"history\", JSON.stringify($f381a3c3b9cf5311$export$ca000e230c0caa3e.history));\n}\nfunction $f381a3c3b9cf5311$export$377b24a555bd4510(data) {\n    $f381a3c3b9cf5311$export$ca000e230c0caa3e.history.push(data);\n    $f381a3c3b9cf5311$var$calculateSummary();\n    $f381a3c3b9cf5311$export$ca000e230c0caa3e.summary.netIncome = $f381a3c3b9cf5311$export$ca000e230c0caa3e.summary.income - $f381a3c3b9cf5311$export$ca000e230c0caa3e.summary.expenses;\n    $f381a3c3b9cf5311$var$persistHistory();\n    $f381a3c3b9cf5311$var$persistSummary();\n}\nfunction $f381a3c3b9cf5311$var$calculateSummary() {\n    $f381a3c3b9cf5311$export$ca000e230c0caa3e.summary.income = $f381a3c3b9cf5311$export$ca000e230c0caa3e.history.reduce((cur, sum)=>{\n        if (sum.category === \"income\") return cur + +sum.amount;\n        return cur;\n    }, 0);\n    $f381a3c3b9cf5311$export$ca000e230c0caa3e.summary.expenses = $f381a3c3b9cf5311$export$ca000e230c0caa3e.history.reduce((cur, sum)=>{\n        if (sum.category !== \"income\") return cur + +sum.amount;\n        return cur;\n    }, 0);\n}\nfunction $f381a3c3b9cf5311$var$persistSummary() {\n    localStorage.setItem(\"summary\", JSON.stringify($f381a3c3b9cf5311$export$ca000e230c0caa3e.summary));\n}\nfunction $f381a3c3b9cf5311$export$f133bf94867451a9() {\n    return $f381a3c3b9cf5311$export$ca000e230c0caa3e.summary;\n}\nfunction $f381a3c3b9cf5311$export$37e4109464c1b57a() {\n    return $f381a3c3b9cf5311$export$ca000e230c0caa3e.history;\n}\nfunction $f381a3c3b9cf5311$export$bdbc3d990af5b3f9() {\n    $f381a3c3b9cf5311$export$ca000e230c0caa3e.history = [];\n    $f381a3c3b9cf5311$var$persistHistory();\n    localStorage.removeItem(\"history\");\n}\nfunction $f381a3c3b9cf5311$export$59872fa2ca817523() {\n    $f381a3c3b9cf5311$export$ca000e230c0caa3e.summary.income = 0;\n    $f381a3c3b9cf5311$export$ca000e230c0caa3e.summary.expenses = 0;\n    $f381a3c3b9cf5311$export$ca000e230c0caa3e.summary.netIncome = 0;\n    $f381a3c3b9cf5311$var$persistSummary();\n    localStorage.removeItem(\"summary\");\n}\nfunction $f381a3c3b9cf5311$var$init() {\n    const storage = localStorage.getItem(\"history\");\n    const summary = localStorage.getItem(\"summary\");\n    if (storage) $f381a3c3b9cf5311$export$ca000e230c0caa3e.history = JSON.parse(storage);\n    if (summary) $f381a3c3b9cf5311$export$ca000e230c0caa3e.summary = JSON.parse(summary);\n}\n$f381a3c3b9cf5311$var$init();\n\n\nclass $c4f2b3ef7834f9d7$var$FormView {\n    _parentElement = document.querySelector(\".form\");\n    date = document.querySelector(\"#date\");\n    amount = document.querySelector(\"#amount\");\n    category = document.querySelector(\"#category\");\n    purpose = document.querySelector(\"#purpose\");\n    _reset() {\n        this.date.value = \"\";\n        this.amount.value = \"\";\n        this.category.value = \"\";\n        this.purpose.value = \"\";\n    }\n    addFormEventHandler(action, renderSummary, renderHistory) {\n        this._parentElement.addEventListener(\"submit\", (e)=>{\n            e.preventDefault();\n            const date = this.date.value;\n            const amount = this.amount.value;\n            const category = this.category.value;\n            const purpose = this.purpose.value;\n            if (!date || !amount || !category || !purpose) return;\n            const submission = {\n                id: new Date(date).toISOString() + Math.random(),\n                date: date,\n                amount: amount,\n                category: category,\n                purpose: purpose\n            };\n            action(submission);\n            renderHistory();\n            renderSummary();\n            this._reset();\n        });\n    }\n}\nvar $c4f2b3ef7834f9d7$export$2e2bcd8739ae039 = new $c4f2b3ef7834f9d7$var$FormView();\n\n\nfunction $b8f57191916382d3$export$2e2bcd8739ae039(obj) {\n    \"@babel/helpers - typeof\";\n    return $b8f57191916382d3$export$2e2bcd8739ae039 = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n        return typeof obj;\n    } : function(obj) {\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, $b8f57191916382d3$export$2e2bcd8739ae039(obj);\n}\n\n\nfunction $377d1ce359384586$export$2e2bcd8739ae039(required, args) {\n    if (args.length < required) throw new TypeError(required + \" argument\" + (required > 1 ? \"s\" : \"\") + \" required, but only \" + args.length + \" present\");\n}\n\n\nfunction $bce2d00733a79246$export$2e2bcd8739ae039(argument) {\n    (0, $377d1ce359384586$export$2e2bcd8739ae039)(1, arguments);\n    var argStr = Object.prototype.toString.call(argument);\n    // Clone the date\n    if (argument instanceof Date || (0, $b8f57191916382d3$export$2e2bcd8739ae039)(argument) === \"object\" && argStr === \"[object Date]\") // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n    else if (typeof argument === \"number\" || argStr === \"[object Number]\") return new Date(argument);\n    else {\n        if ((typeof argument === \"string\" || argStr === \"[object String]\") && typeof console !== \"undefined\") {\n            // eslint-disable-next-line no-console\n            console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments\");\n            // eslint-disable-next-line no-console\n            console.warn(new Error().stack);\n        }\n        return new Date(NaN);\n    }\n}\n\n\n\nfunction $9445ecc5e7cfb647$export$2e2bcd8739ae039(dirtyDate) {\n    (0, $377d1ce359384586$export$2e2bcd8739ae039)(1, arguments);\n    var date = (0, $bce2d00733a79246$export$2e2bcd8739ae039)(dirtyDate);\n    date.setHours(0, 0, 0, 0);\n    return date;\n}\n\n\n\nfunction $c9ad0c9b51445ea3$export$2e2bcd8739ae039(dirtyDateLeft, dirtyDateRight) {\n    (0, $377d1ce359384586$export$2e2bcd8739ae039)(2, arguments);\n    var dateLeftStartOfDay = (0, $9445ecc5e7cfb647$export$2e2bcd8739ae039)(dirtyDateLeft);\n    var dateRightStartOfDay = (0, $9445ecc5e7cfb647$export$2e2bcd8739ae039)(dirtyDateRight);\n    return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();\n}\n\n\n\nfunction $4471dfa3a6e9a76a$export$2e2bcd8739ae039(dirtyDate) {\n    (0, $377d1ce359384586$export$2e2bcd8739ae039)(1, arguments);\n    return (0, $c9ad0c9b51445ea3$export$2e2bcd8739ae039)(dirtyDate, Date.now());\n}\n\nvar $1f47e002602f8387$var$defaultOptions = {};\nfunction $1f47e002602f8387$export$430a3269e24b912e() {\n    return $1f47e002602f8387$var$defaultOptions;\n}\nfunction $1f47e002602f8387$export$95365be1b0704abc(newOptions) {\n    $1f47e002602f8387$var$defaultOptions = newOptions;\n}\n\n\n\n\nfunction $8a0cd77776020c49$export$2e2bcd8739ae039(dirtyDateLeft, dirtyDateRight) {\n    (0, $377d1ce359384586$export$2e2bcd8739ae039)(2, arguments);\n    var dateLeft = (0, $bce2d00733a79246$export$2e2bcd8739ae039)(dirtyDateLeft);\n    var dateRight = (0, $bce2d00733a79246$export$2e2bcd8739ae039)(dirtyDateRight);\n    var diff = dateLeft.getTime() - dateRight.getTime();\n    if (diff < 0) return -1;\n    else if (diff > 0) return 1;\n    else return diff;\n}\n\n\n\n\n\nfunction $1698c992e2cb67cc$export$2e2bcd8739ae039(dirtyDateLeft, dirtyDateRight) {\n    (0, $377d1ce359384586$export$2e2bcd8739ae039)(2, arguments);\n    var dateLeft = (0, $bce2d00733a79246$export$2e2bcd8739ae039)(dirtyDateLeft);\n    var dateRight = (0, $bce2d00733a79246$export$2e2bcd8739ae039)(dirtyDateRight);\n    var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();\n    var monthDiff = dateLeft.getMonth() - dateRight.getMonth();\n    return yearDiff * 12 + monthDiff;\n}\n\n\n\n\n\n\n\nfunction $4ba07667a7282b10$export$2e2bcd8739ae039(dirtyDate) {\n    (0, $377d1ce359384586$export$2e2bcd8739ae039)(1, arguments);\n    var date = (0, $bce2d00733a79246$export$2e2bcd8739ae039)(dirtyDate);\n    date.setHours(23, 59, 59, 999);\n    return date;\n}\n\n\n\n\nfunction $f5125f9e9edab43e$export$2e2bcd8739ae039(dirtyDate) {\n    (0, $377d1ce359384586$export$2e2bcd8739ae039)(1, arguments);\n    var date = (0, $bce2d00733a79246$export$2e2bcd8739ae039)(dirtyDate);\n    var month = date.getMonth();\n    date.setFullYear(date.getFullYear(), month + 1, 0);\n    date.setHours(23, 59, 59, 999);\n    return date;\n}\n\n\n\nfunction $6bfc654d0d5b6f5d$export$2e2bcd8739ae039(dirtyDate) {\n    (0, $377d1ce359384586$export$2e2bcd8739ae039)(1, arguments);\n    var date = (0, $bce2d00733a79246$export$2e2bcd8739ae039)(dirtyDate);\n    return (0, $4ba07667a7282b10$export$2e2bcd8739ae039)(date).getTime() === (0, $f5125f9e9edab43e$export$2e2bcd8739ae039)(date).getTime();\n}\n\n\nfunction $2d8804d7e615dc3e$export$2e2bcd8739ae039(dirtyDateLeft, dirtyDateRight) {\n    (0, $377d1ce359384586$export$2e2bcd8739ae039)(2, arguments);\n    var dateLeft = (0, $bce2d00733a79246$export$2e2bcd8739ae039)(dirtyDateLeft);\n    var dateRight = (0, $bce2d00733a79246$export$2e2bcd8739ae039)(dirtyDateRight);\n    var sign = (0, $8a0cd77776020c49$export$2e2bcd8739ae039)(dateLeft, dateRight);\n    var difference = Math.abs((0, $1698c992e2cb67cc$export$2e2bcd8739ae039)(dateLeft, dateRight));\n    var result;\n    // Check for the difference of less than month\n    if (difference < 1) result = 0;\n    else {\n        if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) // This will check if the date is end of Feb and assign a higher end of month date\n        // to compare it with Jan\n        dateLeft.setDate(30);\n        dateLeft.setMonth(dateLeft.getMonth() - sign * difference);\n        // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n        // If so, result must be decreased by 1 in absolute value\n        var isLastMonthNotFull = (0, $8a0cd77776020c49$export$2e2bcd8739ae039)(dateLeft, dateRight) === -sign;\n        // Check for cases of one full calendar month\n        if ((0, $6bfc654d0d5b6f5d$export$2e2bcd8739ae039)((0, $bce2d00733a79246$export$2e2bcd8739ae039)(dirtyDateLeft)) && difference === 1 && (0, $8a0cd77776020c49$export$2e2bcd8739ae039)(dirtyDateLeft, dateRight) === 1) isLastMonthNotFull = false;\n        result = sign * (difference - Number(isLastMonthNotFull));\n    }\n    // Prevent negative zero\n    return result === 0 ? 0 : result;\n}\n\n\n\n\nfunction $87eb8823ffa05467$export$2e2bcd8739ae039(dateLeft, dateRight) {\n    (0, $377d1ce359384586$export$2e2bcd8739ae039)(2, arguments);\n    return (0, $bce2d00733a79246$export$2e2bcd8739ae039)(dateLeft).getTime() - (0, $bce2d00733a79246$export$2e2bcd8739ae039)(dateRight).getTime();\n}\n\n\n\nvar $c83d105896c1098b$var$roundingMap = {\n    ceil: Math.ceil,\n    round: Math.round,\n    floor: Math.floor,\n    trunc: function trunc(value) {\n        return value < 0 ? Math.ceil(value) : Math.floor(value);\n    } // Math.trunc is not supported by IE\n};\nvar $c83d105896c1098b$var$defaultRoundingMethod = \"trunc\";\nfunction $c83d105896c1098b$export$b6474a47258c1211(method) {\n    return method ? $c83d105896c1098b$var$roundingMap[method] : $c83d105896c1098b$var$roundingMap[$c83d105896c1098b$var$defaultRoundingMethod];\n}\n\n\nfunction $637fe0a8b24e6f33$export$2e2bcd8739ae039(dateLeft, dateRight, options) {\n    (0, $377d1ce359384586$export$2e2bcd8739ae039)(2, arguments);\n    var diff = (0, $87eb8823ffa05467$export$2e2bcd8739ae039)(dateLeft, dateRight) / 1000;\n    return (0, $c83d105896c1098b$export$b6474a47258c1211)(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);\n}\n\n\nvar $1c4e78b8ee7f66d8$var$formatDistanceLocale = {\n    lessThanXSeconds: {\n        one: \"less than a second\",\n        other: \"less than {{count}} seconds\"\n    },\n    xSeconds: {\n        one: \"1 second\",\n        other: \"{{count}} seconds\"\n    },\n    halfAMinute: \"half a minute\",\n    lessThanXMinutes: {\n        one: \"less than a minute\",\n        other: \"less than {{count}} minutes\"\n    },\n    xMinutes: {\n        one: \"1 minute\",\n        other: \"{{count}} minutes\"\n    },\n    aboutXHours: {\n        one: \"about 1 hour\",\n        other: \"about {{count}} hours\"\n    },\n    xHours: {\n        one: \"1 hour\",\n        other: \"{{count}} hours\"\n    },\n    xDays: {\n        one: \"1 day\",\n        other: \"{{count}} days\"\n    },\n    aboutXWeeks: {\n        one: \"about 1 week\",\n        other: \"about {{count}} weeks\"\n    },\n    xWeeks: {\n        one: \"1 week\",\n        other: \"{{count}} weeks\"\n    },\n    aboutXMonths: {\n        one: \"about 1 month\",\n        other: \"about {{count}} months\"\n    },\n    xMonths: {\n        one: \"1 month\",\n        other: \"{{count}} months\"\n    },\n    aboutXYears: {\n        one: \"about 1 year\",\n        other: \"about {{count}} years\"\n    },\n    xYears: {\n        one: \"1 year\",\n        other: \"{{count}} years\"\n    },\n    overXYears: {\n        one: \"over 1 year\",\n        other: \"over {{count}} years\"\n    },\n    almostXYears: {\n        one: \"almost 1 year\",\n        other: \"almost {{count}} years\"\n    }\n};\nvar $1c4e78b8ee7f66d8$var$formatDistance = function formatDistance(token, count, options) {\n    var result;\n    var tokenValue = $1c4e78b8ee7f66d8$var$formatDistanceLocale[token];\n    if (typeof tokenValue === \"string\") result = tokenValue;\n    else if (count === 1) result = tokenValue.one;\n    else result = tokenValue.other.replace(\"{{count}}\", count.toString());\n    if (options !== null && options !== void 0 && options.addSuffix) {\n        if (options.comparison && options.comparison > 0) return \"in \" + result;\n        else return result + \" ago\";\n    }\n    return result;\n};\nvar $1c4e78b8ee7f66d8$export$2e2bcd8739ae039 = $1c4e78b8ee7f66d8$var$formatDistance;\n\n\nfunction $05b7040d79e43f9d$export$2e2bcd8739ae039(args) {\n    return function() {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        // TODO: Remove String()\n        var width = options.width ? String(options.width) : args.defaultWidth;\n        var format = args.formats[width] || args.formats[args.defaultWidth];\n        return format;\n    };\n}\n\n\nvar $b99de2b03d4f39be$var$dateFormats = {\n    full: \"EEEE, MMMM do, y\",\n    long: \"MMMM do, y\",\n    medium: \"MMM d, y\",\n    short: \"MM/dd/yyyy\"\n};\nvar $b99de2b03d4f39be$var$timeFormats = {\n    full: \"h:mm:ss a zzzz\",\n    long: \"h:mm:ss a z\",\n    medium: \"h:mm:ss a\",\n    short: \"h:mm a\"\n};\nvar $b99de2b03d4f39be$var$dateTimeFormats = {\n    full: \"{{date}} 'at' {{time}}\",\n    long: \"{{date}} 'at' {{time}}\",\n    medium: \"{{date}}, {{time}}\",\n    short: \"{{date}}, {{time}}\"\n};\nvar $b99de2b03d4f39be$var$formatLong = {\n    date: (0, $05b7040d79e43f9d$export$2e2bcd8739ae039)({\n        formats: $b99de2b03d4f39be$var$dateFormats,\n        defaultWidth: \"full\"\n    }),\n    time: (0, $05b7040d79e43f9d$export$2e2bcd8739ae039)({\n        formats: $b99de2b03d4f39be$var$timeFormats,\n        defaultWidth: \"full\"\n    }),\n    dateTime: (0, $05b7040d79e43f9d$export$2e2bcd8739ae039)({\n        formats: $b99de2b03d4f39be$var$dateTimeFormats,\n        defaultWidth: \"full\"\n    })\n};\nvar $b99de2b03d4f39be$export$2e2bcd8739ae039 = $b99de2b03d4f39be$var$formatLong;\n\n\nvar $117705cf2af2348d$var$formatRelativeLocale = {\n    lastWeek: \"'last' eeee 'at' p\",\n    yesterday: \"'yesterday at' p\",\n    today: \"'today at' p\",\n    tomorrow: \"'tomorrow at' p\",\n    nextWeek: \"eeee 'at' p\",\n    other: \"P\"\n};\nvar $117705cf2af2348d$var$formatRelative = function formatRelative(token, _date, _baseDate, _options) {\n    return $117705cf2af2348d$var$formatRelativeLocale[token];\n};\nvar $117705cf2af2348d$export$2e2bcd8739ae039 = $117705cf2af2348d$var$formatRelative;\n\n\nfunction $eda89c8f88184c82$export$2e2bcd8739ae039(args) {\n    return function(dirtyIndex, options) {\n        var context = options !== null && options !== void 0 && options.context ? String(options.context) : \"standalone\";\n        var valuesArray;\n        if (context === \"formatting\" && args.formattingValues) {\n            var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n            var width = options !== null && options !== void 0 && options.width ? String(options.width) : defaultWidth;\n            valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n        } else {\n            var _defaultWidth = args.defaultWidth;\n            var _width = options !== null && options !== void 0 && options.width ? String(options.width) : args.defaultWidth;\n            valuesArray = args.values[_width] || args.values[_defaultWidth];\n        }\n        var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n        // @ts-ignore: For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n        return valuesArray[index];\n    };\n}\n\n\nvar $9567ced935a3b497$var$eraValues = {\n    narrow: [\n        \"B\",\n        \"A\"\n    ],\n    abbreviated: [\n        \"BC\",\n        \"AD\"\n    ],\n    wide: [\n        \"Before Christ\",\n        \"Anno Domini\"\n    ]\n};\nvar $9567ced935a3b497$var$quarterValues = {\n    narrow: [\n        \"1\",\n        \"2\",\n        \"3\",\n        \"4\"\n    ],\n    abbreviated: [\n        \"Q1\",\n        \"Q2\",\n        \"Q3\",\n        \"Q4\"\n    ],\n    wide: [\n        \"1st quarter\",\n        \"2nd quarter\",\n        \"3rd quarter\",\n        \"4th quarter\"\n    ]\n};\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nvar $9567ced935a3b497$var$monthValues = {\n    narrow: [\n        \"J\",\n        \"F\",\n        \"M\",\n        \"A\",\n        \"M\",\n        \"J\",\n        \"J\",\n        \"A\",\n        \"S\",\n        \"O\",\n        \"N\",\n        \"D\"\n    ],\n    abbreviated: [\n        \"Jan\",\n        \"Feb\",\n        \"Mar\",\n        \"Apr\",\n        \"May\",\n        \"Jun\",\n        \"Jul\",\n        \"Aug\",\n        \"Sep\",\n        \"Oct\",\n        \"Nov\",\n        \"Dec\"\n    ],\n    wide: [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\"\n    ]\n};\nvar $9567ced935a3b497$var$dayValues = {\n    narrow: [\n        \"S\",\n        \"M\",\n        \"T\",\n        \"W\",\n        \"T\",\n        \"F\",\n        \"S\"\n    ],\n    short: [\n        \"Su\",\n        \"Mo\",\n        \"Tu\",\n        \"We\",\n        \"Th\",\n        \"Fr\",\n        \"Sa\"\n    ],\n    abbreviated: [\n        \"Sun\",\n        \"Mon\",\n        \"Tue\",\n        \"Wed\",\n        \"Thu\",\n        \"Fri\",\n        \"Sat\"\n    ],\n    wide: [\n        \"Sunday\",\n        \"Monday\",\n        \"Tuesday\",\n        \"Wednesday\",\n        \"Thursday\",\n        \"Friday\",\n        \"Saturday\"\n    ]\n};\nvar $9567ced935a3b497$var$dayPeriodValues = {\n    narrow: {\n        am: \"a\",\n        pm: \"p\",\n        midnight: \"mi\",\n        noon: \"n\",\n        morning: \"morning\",\n        afternoon: \"afternoon\",\n        evening: \"evening\",\n        night: \"night\"\n    },\n    abbreviated: {\n        am: \"AM\",\n        pm: \"PM\",\n        midnight: \"midnight\",\n        noon: \"noon\",\n        morning: \"morning\",\n        afternoon: \"afternoon\",\n        evening: \"evening\",\n        night: \"night\"\n    },\n    wide: {\n        am: \"a.m.\",\n        pm: \"p.m.\",\n        midnight: \"midnight\",\n        noon: \"noon\",\n        morning: \"morning\",\n        afternoon: \"afternoon\",\n        evening: \"evening\",\n        night: \"night\"\n    }\n};\nvar $9567ced935a3b497$var$formattingDayPeriodValues = {\n    narrow: {\n        am: \"a\",\n        pm: \"p\",\n        midnight: \"mi\",\n        noon: \"n\",\n        morning: \"in the morning\",\n        afternoon: \"in the afternoon\",\n        evening: \"in the evening\",\n        night: \"at night\"\n    },\n    abbreviated: {\n        am: \"AM\",\n        pm: \"PM\",\n        midnight: \"midnight\",\n        noon: \"noon\",\n        morning: \"in the morning\",\n        afternoon: \"in the afternoon\",\n        evening: \"in the evening\",\n        night: \"at night\"\n    },\n    wide: {\n        am: \"a.m.\",\n        pm: \"p.m.\",\n        midnight: \"midnight\",\n        noon: \"noon\",\n        morning: \"in the morning\",\n        afternoon: \"in the afternoon\",\n        evening: \"in the evening\",\n        night: \"at night\"\n    }\n};\nvar $9567ced935a3b497$var$ordinalNumber = function ordinalNumber(dirtyNumber, _options) {\n    var number = Number(dirtyNumber);\n    // If ordinal numbers depend on context, for example,\n    // if they are different for different grammatical genders,\n    // use `options.unit`.\n    //\n    // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n    // 'day', 'hour', 'minute', 'second'.\n    var rem100 = number % 100;\n    if (rem100 > 20 || rem100 < 10) switch(rem100 % 10){\n        case 1:\n            return number + \"st\";\n        case 2:\n            return number + \"nd\";\n        case 3:\n            return number + \"rd\";\n    }\n    return number + \"th\";\n};\nvar $9567ced935a3b497$var$localize = {\n    ordinalNumber: $9567ced935a3b497$var$ordinalNumber,\n    era: (0, $eda89c8f88184c82$export$2e2bcd8739ae039)({\n        values: $9567ced935a3b497$var$eraValues,\n        defaultWidth: \"wide\"\n    }),\n    quarter: (0, $eda89c8f88184c82$export$2e2bcd8739ae039)({\n        values: $9567ced935a3b497$var$quarterValues,\n        defaultWidth: \"wide\",\n        argumentCallback: function argumentCallback(quarter) {\n            return quarter - 1;\n        }\n    }),\n    month: (0, $eda89c8f88184c82$export$2e2bcd8739ae039)({\n        values: $9567ced935a3b497$var$monthValues,\n        defaultWidth: \"wide\"\n    }),\n    day: (0, $eda89c8f88184c82$export$2e2bcd8739ae039)({\n        values: $9567ced935a3b497$var$dayValues,\n        defaultWidth: \"wide\"\n    }),\n    dayPeriod: (0, $eda89c8f88184c82$export$2e2bcd8739ae039)({\n        values: $9567ced935a3b497$var$dayPeriodValues,\n        defaultWidth: \"wide\",\n        formattingValues: $9567ced935a3b497$var$formattingDayPeriodValues,\n        defaultFormattingWidth: \"wide\"\n    })\n};\nvar $9567ced935a3b497$export$2e2bcd8739ae039 = $9567ced935a3b497$var$localize;\n\n\nfunction $c309fdccb9ef673a$export$2e2bcd8739ae039(args) {\n    return function(string) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var width = options.width;\n        var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n        var matchResult = string.match(matchPattern);\n        if (!matchResult) return null;\n        var matchedString = matchResult[0];\n        var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n        var key = Array.isArray(parsePatterns) ? $c309fdccb9ef673a$var$findIndex(parsePatterns, function(pattern) {\n            return pattern.test(matchedString);\n        }) : $c309fdccb9ef673a$var$findKey(parsePatterns, function(pattern) {\n            return pattern.test(matchedString);\n        });\n        var value;\n        value = args.valueCallback ? args.valueCallback(key) : key;\n        value = options.valueCallback ? options.valueCallback(value) : value;\n        var rest = string.slice(matchedString.length);\n        return {\n            value: value,\n            rest: rest\n        };\n    };\n}\nfunction $c309fdccb9ef673a$var$findKey(object, predicate) {\n    for(var key in object){\n        if (object.hasOwnProperty(key) && predicate(object[key])) return key;\n    }\n    return undefined;\n}\nfunction $c309fdccb9ef673a$var$findIndex(array, predicate) {\n    for(var key = 0; key < array.length; key++){\n        if (predicate(array[key])) return key;\n    }\n    return undefined;\n}\n\n\nfunction $56621c36efca199b$export$2e2bcd8739ae039(args) {\n    return function(string) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var matchResult = string.match(args.matchPattern);\n        if (!matchResult) return null;\n        var matchedString = matchResult[0];\n        var parseResult = string.match(args.parsePattern);\n        if (!parseResult) return null;\n        var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n        value = options.valueCallback ? options.valueCallback(value) : value;\n        var rest = string.slice(matchedString.length);\n        return {\n            value: value,\n            rest: rest\n        };\n    };\n}\n\n\nvar $219397ebd8b56b11$var$matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar $219397ebd8b56b11$var$parseOrdinalNumberPattern = /\\d+/i;\nvar $219397ebd8b56b11$var$matchEraPatterns = {\n    narrow: /^(b|a)/i,\n    abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n    wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar $219397ebd8b56b11$var$parseEraPatterns = {\n    any: [\n        /^b/i,\n        /^(a|c)/i\n    ]\n};\nvar $219397ebd8b56b11$var$matchQuarterPatterns = {\n    narrow: /^[1234]/i,\n    abbreviated: /^q[1234]/i,\n    wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar $219397ebd8b56b11$var$parseQuarterPatterns = {\n    any: [\n        /1/i,\n        /2/i,\n        /3/i,\n        /4/i\n    ]\n};\nvar $219397ebd8b56b11$var$matchMonthPatterns = {\n    narrow: /^[jfmasond]/i,\n    abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n    wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar $219397ebd8b56b11$var$parseMonthPatterns = {\n    narrow: [\n        /^j/i,\n        /^f/i,\n        /^m/i,\n        /^a/i,\n        /^m/i,\n        /^j/i,\n        /^j/i,\n        /^a/i,\n        /^s/i,\n        /^o/i,\n        /^n/i,\n        /^d/i\n    ],\n    any: [\n        /^ja/i,\n        /^f/i,\n        /^mar/i,\n        /^ap/i,\n        /^may/i,\n        /^jun/i,\n        /^jul/i,\n        /^au/i,\n        /^s/i,\n        /^o/i,\n        /^n/i,\n        /^d/i\n    ]\n};\nvar $219397ebd8b56b11$var$matchDayPatterns = {\n    narrow: /^[smtwf]/i,\n    short: /^(su|mo|tu|we|th|fr|sa)/i,\n    abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n    wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar $219397ebd8b56b11$var$parseDayPatterns = {\n    narrow: [\n        /^s/i,\n        /^m/i,\n        /^t/i,\n        /^w/i,\n        /^t/i,\n        /^f/i,\n        /^s/i\n    ],\n    any: [\n        /^su/i,\n        /^m/i,\n        /^tu/i,\n        /^w/i,\n        /^th/i,\n        /^f/i,\n        /^sa/i\n    ]\n};\nvar $219397ebd8b56b11$var$matchDayPeriodPatterns = {\n    narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n    any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar $219397ebd8b56b11$var$parseDayPeriodPatterns = {\n    any: {\n        am: /^a/i,\n        pm: /^p/i,\n        midnight: /^mi/i,\n        noon: /^no/i,\n        morning: /morning/i,\n        afternoon: /afternoon/i,\n        evening: /evening/i,\n        night: /night/i\n    }\n};\nvar $219397ebd8b56b11$var$match = {\n    ordinalNumber: (0, $56621c36efca199b$export$2e2bcd8739ae039)({\n        matchPattern: $219397ebd8b56b11$var$matchOrdinalNumberPattern,\n        parsePattern: $219397ebd8b56b11$var$parseOrdinalNumberPattern,\n        valueCallback: function valueCallback(value) {\n            return parseInt(value, 10);\n        }\n    }),\n    era: (0, $c309fdccb9ef673a$export$2e2bcd8739ae039)({\n        matchPatterns: $219397ebd8b56b11$var$matchEraPatterns,\n        defaultMatchWidth: \"wide\",\n        parsePatterns: $219397ebd8b56b11$var$parseEraPatterns,\n        defaultParseWidth: \"any\"\n    }),\n    quarter: (0, $c309fdccb9ef673a$export$2e2bcd8739ae039)({\n        matchPatterns: $219397ebd8b56b11$var$matchQuarterPatterns,\n        defaultMatchWidth: \"wide\",\n        parsePatterns: $219397ebd8b56b11$var$parseQuarterPatterns,\n        defaultParseWidth: \"any\",\n        valueCallback: function valueCallback(index) {\n            return index + 1;\n        }\n    }),\n    month: (0, $c309fdccb9ef673a$export$2e2bcd8739ae039)({\n        matchPatterns: $219397ebd8b56b11$var$matchMonthPatterns,\n        defaultMatchWidth: \"wide\",\n        parsePatterns: $219397ebd8b56b11$var$parseMonthPatterns,\n        defaultParseWidth: \"any\"\n    }),\n    day: (0, $c309fdccb9ef673a$export$2e2bcd8739ae039)({\n        matchPatterns: $219397ebd8b56b11$var$matchDayPatterns,\n        defaultMatchWidth: \"wide\",\n        parsePatterns: $219397ebd8b56b11$var$parseDayPatterns,\n        defaultParseWidth: \"any\"\n    }),\n    dayPeriod: (0, $c309fdccb9ef673a$export$2e2bcd8739ae039)({\n        matchPatterns: $219397ebd8b56b11$var$matchDayPeriodPatterns,\n        defaultMatchWidth: \"any\",\n        parsePatterns: $219397ebd8b56b11$var$parseDayPeriodPatterns,\n        defaultParseWidth: \"any\"\n    })\n};\nvar $219397ebd8b56b11$export$2e2bcd8739ae039 = $219397ebd8b56b11$var$match;\n\n\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */ var $0ca880ce53ce49f9$var$locale = {\n    code: \"en-US\",\n    formatDistance: (0, $1c4e78b8ee7f66d8$export$2e2bcd8739ae039),\n    formatLong: (0, $b99de2b03d4f39be$export$2e2bcd8739ae039),\n    formatRelative: (0, $117705cf2af2348d$export$2e2bcd8739ae039),\n    localize: (0, $9567ced935a3b497$export$2e2bcd8739ae039),\n    match: (0, $219397ebd8b56b11$export$2e2bcd8739ae039),\n    options: {\n        weekStartsOn: 0 /* Sunday */ ,\n        firstWeekContainsDate: 1\n    }\n};\nvar $0ca880ce53ce49f9$export$2e2bcd8739ae039 = $0ca880ce53ce49f9$var$locale;\n\n\nvar $98e3d5324cb7d94c$export$2e2bcd8739ae039 = (0, $0ca880ce53ce49f9$export$2e2bcd8739ae039);\n\n\n\nfunction $4c58fe0eb0761e95$export$2e2bcd8739ae039(target, object) {\n    if (target == null) throw new TypeError(\"assign requires that input parameter not be null or undefined\");\n    for(var property in object)if (Object.prototype.hasOwnProperty.call(object, property)) target[property] = object[property];\n    return target;\n}\n\n\nfunction $a3f0d923300214de$export$2e2bcd8739ae039(object) {\n    return (0, $4c58fe0eb0761e95$export$2e2bcd8739ae039)({}, object);\n}\n\n\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */ function $6eb366e006a8b659$export$2e2bcd8739ae039(date) {\n    var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n    utcDate.setUTCFullYear(date.getFullYear());\n    return date.getTime() - utcDate.getTime();\n}\n\n\n\nvar $4e2c21a599879745$var$MINUTES_IN_DAY = 1440;\nvar $4e2c21a599879745$var$MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar $4e2c21a599879745$var$MINUTES_IN_MONTH = 43200;\nvar $4e2c21a599879745$var$MINUTES_IN_TWO_MONTHS = 86400;\nfunction $4e2c21a599879745$export$2e2bcd8739ae039(dirtyDate, dirtyBaseDate, options) {\n    var _ref, _options$locale;\n    (0, $377d1ce359384586$export$2e2bcd8739ae039)(2, arguments);\n    var defaultOptions = (0, $1f47e002602f8387$export$430a3269e24b912e)();\n    var locale = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : (0, $98e3d5324cb7d94c$export$2e2bcd8739ae039);\n    if (!locale.formatDistance) throw new RangeError(\"locale must contain formatDistance property\");\n    var comparison = (0, $8a0cd77776020c49$export$2e2bcd8739ae039)(dirtyDate, dirtyBaseDate);\n    if (isNaN(comparison)) throw new RangeError(\"Invalid time value\");\n    var localizeOptions = (0, $4c58fe0eb0761e95$export$2e2bcd8739ae039)((0, $a3f0d923300214de$export$2e2bcd8739ae039)(options), {\n        addSuffix: Boolean(options === null || options === void 0 ? void 0 : options.addSuffix),\n        comparison: comparison\n    });\n    var dateLeft;\n    var dateRight;\n    if (comparison > 0) {\n        dateLeft = (0, $bce2d00733a79246$export$2e2bcd8739ae039)(dirtyBaseDate);\n        dateRight = (0, $bce2d00733a79246$export$2e2bcd8739ae039)(dirtyDate);\n    } else {\n        dateLeft = (0, $bce2d00733a79246$export$2e2bcd8739ae039)(dirtyDate);\n        dateRight = (0, $bce2d00733a79246$export$2e2bcd8739ae039)(dirtyBaseDate);\n    }\n    var seconds = (0, $637fe0a8b24e6f33$export$2e2bcd8739ae039)(dateRight, dateLeft);\n    var offsetInSeconds = ((0, $6eb366e006a8b659$export$2e2bcd8739ae039)(dateRight) - (0, $6eb366e006a8b659$export$2e2bcd8739ae039)(dateLeft)) / 1000;\n    var minutes = Math.round((seconds - offsetInSeconds) / 60);\n    var months;\n    // 0 up to 2 mins\n    if (minutes < 2) {\n        if (options !== null && options !== void 0 && options.includeSeconds) {\n            if (seconds < 5) return locale.formatDistance(\"lessThanXSeconds\", 5, localizeOptions);\n            else if (seconds < 10) return locale.formatDistance(\"lessThanXSeconds\", 10, localizeOptions);\n            else if (seconds < 20) return locale.formatDistance(\"lessThanXSeconds\", 20, localizeOptions);\n            else if (seconds < 40) return locale.formatDistance(\"halfAMinute\", 0, localizeOptions);\n            else if (seconds < 60) return locale.formatDistance(\"lessThanXMinutes\", 1, localizeOptions);\n            else return locale.formatDistance(\"xMinutes\", 1, localizeOptions);\n        } else {\n            if (minutes === 0) return locale.formatDistance(\"lessThanXMinutes\", 1, localizeOptions);\n            else return locale.formatDistance(\"xMinutes\", minutes, localizeOptions);\n        }\n    } else if (minutes < 45) return locale.formatDistance(\"xMinutes\", minutes, localizeOptions);\n    else if (minutes < 90) return locale.formatDistance(\"aboutXHours\", 1, localizeOptions);\n    else if (minutes < $4e2c21a599879745$var$MINUTES_IN_DAY) {\n        var hours = Math.round(minutes / 60);\n        return locale.formatDistance(\"aboutXHours\", hours, localizeOptions);\n    // 1 day up to 1.75 days\n    } else if (minutes < $4e2c21a599879745$var$MINUTES_IN_ALMOST_TWO_DAYS) return locale.formatDistance(\"xDays\", 1, localizeOptions);\n    else if (minutes < $4e2c21a599879745$var$MINUTES_IN_MONTH) {\n        var days = Math.round(minutes / $4e2c21a599879745$var$MINUTES_IN_DAY);\n        return locale.formatDistance(\"xDays\", days, localizeOptions);\n    // 1 month up to 2 months\n    } else if (minutes < $4e2c21a599879745$var$MINUTES_IN_TWO_MONTHS) {\n        months = Math.round(minutes / $4e2c21a599879745$var$MINUTES_IN_MONTH);\n        return locale.formatDistance(\"aboutXMonths\", months, localizeOptions);\n    }\n    months = (0, $2d8804d7e615dc3e$export$2e2bcd8739ae039)(dateRight, dateLeft);\n    // 2 months up to 12 months\n    if (months < 12) {\n        var nearestMonth = Math.round(minutes / $4e2c21a599879745$var$MINUTES_IN_MONTH);\n        return locale.formatDistance(\"xMonths\", nearestMonth, localizeOptions);\n    // 1 year up to max Date\n    } else {\n        var monthsSinceStartOfYear = months % 12;\n        var years = Math.floor(months / 12);\n        // N years up to 1 years 3 months\n        if (monthsSinceStartOfYear < 3) return locale.formatDistance(\"aboutXYears\", years, localizeOptions);\n        else if (monthsSinceStartOfYear < 9) return locale.formatDistance(\"overXYears\", years, localizeOptions);\n        else return locale.formatDistance(\"almostXYears\", years + 1, localizeOptions);\n    }\n}\n\n\n\nfunction $052e6fc362810797$export$2e2bcd8739ae039(dirtyDate, options) {\n    (0, $377d1ce359384586$export$2e2bcd8739ae039)(1, arguments);\n    return (0, $4e2c21a599879745$export$2e2bcd8739ae039)(dirtyDate, Date.now(), options);\n}\n\n\nconst $d074305c0d005229$export$3dc27271f5d5c629 = (value)=>new Intl.NumberFormat(\"en\", {\n        style: \"currency\",\n        currency: \"NGN\"\n    }).format(value);\nfunction $d074305c0d005229$export$d07f57595c356899(str) {\n    const stringArray = str.split(\" \");\n    if (stringArray.length >= 2) {\n        const newArray = stringArray.map((string)=>string.charAt(0).toUpperCase() + string.slice(1).toLowerCase());\n        return newArray.join(\" \");\n    }\n    return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n}\nfunction $d074305c0d005229$export$ecedf06e854910b6(date) {\n    const dateObj = new Date(Date.parse(date));\n    if ((0, $4471dfa3a6e9a76a$export$2e2bcd8739ae039)(dateObj)) return \"Today\";\n    else return (0, $052e6fc362810797$export$2e2bcd8739ae039)(dateObj, {\n        addSuffix: true\n    }).replace(\"about\", \"\");\n}\n\n\nclass $3431b07ff50304ca$var$HistoryView {\n    _parentElement = document.querySelector(\"#history_box\");\n    resetHistory = document.querySelector(\".btn-reset\");\n    _markup(data) {\n        const { id: id, date: date, amount: amount, category: category, purpose: purpose } = data;\n        return `<div class=\"history__item\" data-id=${id}>\r\n        <p class=\"date\">${(0, $d074305c0d005229$export$ecedf06e854910b6)(date)}</p>\r\n        <p class='${category === \"income\" ? \"income\" : \"expense\"} amount' >${(0, $d074305c0d005229$export$3dc27271f5d5c629)(amount)}</p>\r\n        <p class=\"category\">${(0, $d074305c0d005229$export$d07f57595c356899)(category)}</p>\r\n        <p class=\"purpose\">${(0, $d074305c0d005229$export$d07f57595c356899)(purpose)}</p>\r\n      </div>`;\n    }\n    _errorMessage() {\n        const message = `<div class=\"history__error\">\r\n    <p>You haven't recorded any data yet</p>\r\n  </div>`;\n        this._parentElement.insertAdjacentHTML(\"afterbegin\", message);\n    }\n    renderHistory(markupArray) {\n        const errorElement = this._parentElement.querySelector(\".history__error\");\n        if (errorElement) this._parentElement.removeChild(errorElement);\n        const newData = markupArray[markupArray.length - 1];\n        this._parentElement.insertAdjacentHTML(\"afterbegin\", this._markup(newData));\n        this.resetHistory.classList.remove(\"hidden\");\n    }\n    loadHistoryOnDOMLoad(stateArray) {\n        const state = stateArray();\n        document.addEventListener(\"DOMContentLoaded\", ()=>{\n            if (state.length === 0) return this._errorMessage();\n            state.forEach((markup)=>this._parentElement.insertAdjacentHTML(\"afterbegin\", this._markup(markup)));\n            this.resetHistory.classList.remove(\"hidden\");\n        });\n    }\n    clearRecords(action, action2) {\n        this.resetHistory.addEventListener(\"click\", ()=>{\n            action();\n            action2();\n            const errorMessageElement = this._parentElement.querySelector(\".history__error\");\n            if (!errorMessageElement) {\n                this.resetHistory.classList.add(\"hidden\");\n                this._parentElement.innerHTML = \"\";\n                this._parentElement.innerHTML = this._errorMessage().bind(this);\n            }\n        });\n    }\n}\nvar $3431b07ff50304ca$export$2e2bcd8739ae039 = new $3431b07ff50304ca$var$HistoryView();\n\n\n\nclass $f43de15ef141a05e$var$SummaryView {\n    _parentElement = document.querySelector(\".summary\");\n    income = document.getElementById(\"total-income\");\n    expenses = document.getElementById(\"total-expenses\");\n    netIncome = document.getElementById(\"total-netIncome\");\n    netIncomeParagraph = document.getElementById(\"total-netIncome\");\n    markup(data) {\n        return `<p>${data}</p>`;\n    }\n    renderSummary(data) {\n        const income = this.income;\n        const expenses = this.expenses;\n        const netIncome = this.netIncome;\n        const { income: newIncome, expenses: newExpenses, netIncome: newNetIncome } = data();\n        income.textContent = (0, $d074305c0d005229$export$3dc27271f5d5c629)(newIncome);\n        expenses.textContent = (0, $d074305c0d005229$export$3dc27271f5d5c629)(newExpenses);\n        netIncome.textContent = (0, $d074305c0d005229$export$3dc27271f5d5c629)(newNetIncome);\n    }\n    summaryDOMContentLoad(data) {\n        document.addEventListener(\"DOMContentLoaded\", ()=>{\n            const income = this.income;\n            const expenses = this.expenses;\n            const netIncome = this.netIncome;\n            const { income: newIncome, expenses: newExpenses, netIncome: newNetIncome } = data();\n            income.textContent = (0, $d074305c0d005229$export$3dc27271f5d5c629)(newIncome);\n            expenses.textContent = (0, $d074305c0d005229$export$3dc27271f5d5c629)(newExpenses);\n            netIncome.textContent = (0, $d074305c0d005229$export$3dc27271f5d5c629)(newNetIncome);\n        });\n    }\n    clearSummary() {\n        this.income.textContent = (0, $d074305c0d005229$export$3dc27271f5d5c629)(0);\n        this.expenses.textContent = (0, $d074305c0d005229$export$3dc27271f5d5c629)(0);\n        this.netIncome.textContent = (0, $d074305c0d005229$export$3dc27271f5d5c629)(0);\n    }\n}\nvar $f43de15ef141a05e$export$2e2bcd8739ae039 = new $f43de15ef141a05e$var$SummaryView();\n\n\nfunction $03cf872f16b5d10b$var$recordFormData(submission) {\n    return $f381a3c3b9cf5311$export$377b24a555bd4510(submission);\n}\nfunction $03cf872f16b5d10b$var$renderSummary() {\n    (0, $f43de15ef141a05e$export$2e2bcd8739ae039).renderSummary($f381a3c3b9cf5311$export$f133bf94867451a9);\n}\nfunction $03cf872f16b5d10b$var$historyData() {\n    const data = $f381a3c3b9cf5311$export$37e4109464c1b57a();\n    (0, $3431b07ff50304ca$export$2e2bcd8739ae039).renderHistory(data);\n}\nfunction $03cf872f16b5d10b$var$clearHistoryData() {\n    $f381a3c3b9cf5311$export$bdbc3d990af5b3f9();\n}\nfunction $03cf872f16b5d10b$var$clearSummary() {\n    $f381a3c3b9cf5311$export$59872fa2ca817523();\n    (0, $f43de15ef141a05e$export$2e2bcd8739ae039).clearSummary();\n}\nfunction $03cf872f16b5d10b$var$init() {\n    (0, $3431b07ff50304ca$export$2e2bcd8739ae039).loadHistoryOnDOMLoad($f381a3c3b9cf5311$export$37e4109464c1b57a);\n    (0, $c4f2b3ef7834f9d7$export$2e2bcd8739ae039).addFormEventHandler($03cf872f16b5d10b$var$recordFormData, $03cf872f16b5d10b$var$renderSummary, $03cf872f16b5d10b$var$historyData);\n    (0, $3431b07ff50304ca$export$2e2bcd8739ae039).clearRecords($03cf872f16b5d10b$var$clearHistoryData, $03cf872f16b5d10b$var$clearSummary);\n    (0, $f43de15ef141a05e$export$2e2bcd8739ae039).summaryDOMContentLoad($f381a3c3b9cf5311$export$f133bf94867451a9);\n}\n$03cf872f16b5d10b$var$init();\n\n\n//# sourceMappingURL=index.ee056bfd.js.map\n","import * as model from './model';\r\nimport formView from './view/formView';\r\nimport historyView from './view/historyView';\r\nimport summaryView from './view/summaryView';\r\n\r\nfunction recordFormData(submission) {\r\n  return model.recordHistory(submission);\r\n}\r\n\r\nfunction renderSummary() {\r\n  summaryView.renderSummary(model.updateSummary);\r\n}\r\n\r\nfunction historyData() {\r\n  const data = model.historyData();\r\n  historyView.renderHistory(data);\r\n}\r\n\r\nfunction clearHistoryData() {\r\n  model.clearHistory();\r\n}\r\n\r\nfunction clearSummary() {\r\n  model.clearSummary();\r\n  summaryView.clearSummary();\r\n}\r\n\r\nfunction init() {\r\n  historyView.loadHistoryOnDOMLoad(model.historyData);\r\n  formView.addFormEventHandler(recordFormData, renderSummary, historyData);\r\n  historyView.clearRecords(clearHistoryData, clearSummary);\r\n  summaryView.summaryDOMContentLoad(model.updateSummary);\r\n}\r\n\r\ninit();\r\n","export const state = {\r\n  summary: {\r\n    income: 0,\r\n    expenses: 0,\r\n    netIncome: 0,\r\n  },\r\n\r\n  history: [],\r\n};\r\n\r\nfunction persistHistory() {\r\n  localStorage.setItem('history', JSON.stringify(state.history));\r\n}\r\n\r\nexport function recordHistory(data) {\r\n  state.history.push(data);\r\n  calculateSummary();\r\n  state.summary.netIncome = state.summary.income - state.summary.expenses;\r\n  persistHistory();\r\n  persistSummary();\r\n}\r\n\r\nfunction calculateSummary() {\r\n  state.summary.income = state.history.reduce((cur, sum) => {\r\n    if (sum.category === 'income') {\r\n      return cur + +sum.amount;\r\n    }\r\n    return cur;\r\n  }, 0);\r\n\r\n  state.summary.expenses = state.history.reduce((cur, sum) => {\r\n    if (sum.category !== 'income') {\r\n      return cur + +sum.amount;\r\n    }\r\n    return cur;\r\n  }, 0);\r\n}\r\n\r\nfunction persistSummary() {\r\n  localStorage.setItem('summary', JSON.stringify(state.summary));\r\n}\r\n\r\nexport function updateSummary() {\r\n  return state.summary;\r\n}\r\n\r\nexport function historyData() {\r\n  return state.history;\r\n}\r\n\r\nexport function clearHistory() {\r\n  state.history = [];\r\n  persistHistory();\r\n  localStorage.removeItem('history');\r\n}\r\n\r\nexport function clearSummary() {\r\n  state.summary.income = 0;\r\n  state.summary.expenses = 0;\r\n  state.summary.netIncome = 0;\r\n  persistSummary();\r\n  localStorage.removeItem('summary');\r\n}\r\n\r\nfunction init() {\r\n  const storage = localStorage.getItem('history');\r\n  const summary = localStorage.getItem('summary');\r\n  if (storage) state.history = JSON.parse(storage);\r\n  if (summary) state.summary = JSON.parse(summary);\r\n}\r\n\r\ninit();\r\n","class FormView {\r\n  _parentElement = document.querySelector('.form');\r\n  date = document.querySelector('#date');\r\n  amount = document.querySelector('#amount');\r\n  category = document.querySelector('#category');\r\n  purpose = document.querySelector('#purpose');\r\n\r\n  _reset() {\r\n    this.date.value = '';\r\n    this.amount.value = '';\r\n    this.category.value = '';\r\n    this.purpose.value = '';\r\n  }\r\n\r\n  addFormEventHandler(action, renderSummary, renderHistory) {\r\n    this._parentElement.addEventListener('submit', (e) => {\r\n      e.preventDefault();\r\n\r\n      const date = this.date.value;\r\n      const amount = this.amount.value;\r\n      const category = this.category.value;\r\n      const purpose = this.purpose.value;\r\n\r\n      if (!date || !amount || !category || !purpose) return;\r\n\r\n      const submission = {\r\n        id: new Date(date).toISOString() + Math.random(),\r\n        date,\r\n        amount,\r\n        category,\r\n        purpose,\r\n      };\r\n\r\n      action(submission);\r\n      renderHistory();\r\n      renderSummary();\r\n      this._reset();\r\n    });\r\n  }\r\n}\r\n\r\nexport default new FormView();\r\n","import {\r\n  capitalizeFirstLetter,\r\n  formatCurrency,\r\n  formatDateDistance,\r\n} from '../utilities/helpers';\r\n\r\nclass HistoryView {\r\n  _parentElement = document.querySelector('#history_box');\r\n  resetHistory = document.querySelector('.btn-reset');\r\n\r\n  _markup(data) {\r\n    const { id, date, amount, category, purpose } = data;\r\n\r\n    return `<div class=\"history__item\" data-id=${id}>\r\n        <p class=\"date\">${formatDateDistance(date)}</p>\r\n        <p class='${\r\n          category === 'income' ? 'income' : 'expense'\r\n        } amount' >${formatCurrency(amount)}</p>\r\n        <p class=\"category\">${capitalizeFirstLetter(category)}</p>\r\n        <p class=\"purpose\">${capitalizeFirstLetter(purpose)}</p>\r\n      </div>`;\r\n  }\r\n\r\n  _errorMessage() {\r\n    const message = `<div class=\"history__error\">\r\n    <p>You haven't recorded any data yet</p>\r\n  </div>`;\r\n\r\n    this._parentElement.insertAdjacentHTML('afterbegin', message);\r\n  }\r\n\r\n  renderHistory(markupArray) {\r\n    const errorElement = this._parentElement.querySelector('.history__error');\r\n    if (errorElement) {\r\n      this._parentElement.removeChild(errorElement);\r\n    }\r\n\r\n    const newData = markupArray[markupArray.length - 1];\r\n    this._parentElement.insertAdjacentHTML('afterbegin', this._markup(newData));\r\n    this.resetHistory.classList.remove('hidden');\r\n  }\r\n\r\n  loadHistoryOnDOMLoad(stateArray) {\r\n    const state = stateArray();\r\n    document.addEventListener('DOMContentLoaded', () => {\r\n      if (state.length === 0) return this._errorMessage();\r\n      state.forEach((markup) =>\r\n        this._parentElement.insertAdjacentHTML(\r\n          'afterbegin',\r\n          this._markup(markup)\r\n        )\r\n      );\r\n      this.resetHistory.classList.remove('hidden');\r\n    });\r\n  }\r\n\r\n  clearRecords(action, action2) {\r\n    this.resetHistory.addEventListener('click', () => {\r\n      action();\r\n      action2();\r\n\r\n      const errorMessageElement =\r\n        this._parentElement.querySelector('.history__error');\r\n      if (!errorMessageElement) {\r\n        this.resetHistory.classList.add('hidden');\r\n        this._parentElement.innerHTML = '';\r\n        this._parentElement.innerHTML = this._errorMessage().bind(this);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default new HistoryView();\r\n","import { isToday, formatDistanceToNow } from 'date-fns';\r\n\r\nexport const formatCurrency = (value) =>\r\n  new Intl.NumberFormat('en', { style: 'currency', currency: 'NGN' }).format(\r\n    value\r\n  );\r\n\r\nexport function capitalizeFirstLetter(str) {\r\n  const stringArray = str.split(' ');\r\n\r\n  if (stringArray.length >= 2) {\r\n    const newArray = stringArray.map(\r\n      (string) => string.charAt(0).toUpperCase() + string.slice(1).toLowerCase()\r\n    );\r\n    return newArray.join(' ');\r\n  }\r\n  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\r\n}\r\n\r\nexport function formatDateDistance(date) {\r\n  const dateObj = new Date(Date.parse(date));\r\n\r\n  if (isToday(dateObj)) {\r\n    return 'Today';\r\n  } else {\r\n    return formatDistanceToNow(dateObj, { addSuffix: true }).replace(\r\n      'about',\r\n      ''\r\n    );\r\n  }\r\n}\r\n","import isSameDay from \"../isSameDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isToday\n * @category Day Helpers\n * @summary Is the given date today?\n * @pure false\n *\n * @description\n * Is the given date today?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is today\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * const result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\nexport default function isToday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameDay(dirtyDate, Date.now());\n}","import startOfDay from \"../startOfDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day (and year and month)?\n *\n * @description\n * Are the given dates in the same day (and year and month)?\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day (and year and month)\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n *\n * @example\n * // Are 4 September and 4 October in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n * //=> false\n *\n * @example\n * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n * //=> false\n */\nexport default function isSameDay(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);\n  var dateRightStartOfDay = startOfDay(dirtyDateRight);\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (argument instanceof Date || _typeof(argument) === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments\");\n      // eslint-disable-next-line no-console\n      console.warn(new Error().stack);\n    }\n    return new Date(NaN);\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import distanceInWords from \"../formatDistance/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name formatDistanceToNow\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given date and now in words.\n *\n * | Distance to now                                                   | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance to now     | Result               |\n * |---------------------|----------------------|\n * | 0 secs ... 5 secs   | less than 5 seconds  |\n * | 5 secs ... 10 secs  | less than 10 seconds |\n * | 10 secs ... 20 secs | less than 20 seconds |\n * | 20 secs ... 40 secs | half a minute        |\n * | 40 secs ... 60 secs | less than a minute   |\n * | 60 secs ... 90 secs | 1 minute             |\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result specifies if now is earlier or later than the passed date\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * const result = formatDistanceToNow(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * const result = formatDistanceToNow(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * const result = formatDistanceToNow(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in about 1 year'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * const eoLocale = require('date-fns/locale/eo')\n * const result = formatDistanceToNow(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\nexport default function formatDistanceToNow(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  return distanceInWords(dirtyDate, Date.now(), options);\n}","import { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport differenceInMonths from \"../differenceInMonths/index.js\";\nimport differenceInSeconds from \"../differenceInSeconds/index.js\";\nimport defaultLocale from \"../_lib/defaultLocale/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport cloneObject from \"../_lib/cloneObject/index.js\";\nimport assign from \"../_lib/assign/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\n\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * const result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistance(dirtyDate, dirtyBaseDate, options) {\n  var _ref, _options$locale;\n  requiredArgs(2, arguments);\n  var defaultOptions = getDefaultOptions();\n  var locale = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : defaultLocale;\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain formatDistance property');\n  }\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n  var localizeOptions = assign(cloneObject(options), {\n    addSuffix: Boolean(options === null || options === void 0 ? void 0 : options.addSuffix),\n    comparison: comparison\n  });\n  var dateLeft;\n  var dateRight;\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months;\n\n  // 0 up to 2 mins\n  if (minutes < 2) {\n    if (options !== null && options !== void 0 && options.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance('halfAMinute', 0, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', minutes, localizeOptions);\n      }\n    }\n\n    // 2 mins up to 0.75 hrs\n  } else if (minutes < 45) {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions);\n\n    // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance('aboutXHours', 1, localizeOptions);\n\n    // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60);\n    return locale.formatDistance('aboutXHours', hours, localizeOptions);\n\n    // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale.formatDistance('xDays', 1, localizeOptions);\n\n    // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions);\n\n    // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('aboutXMonths', months, localizeOptions);\n  }\n  months = differenceInMonths(dateRight, dateLeft);\n\n  // 2 months up to 12 months\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', nearestMonth, localizeOptions);\n\n    // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12);\n\n    // N years up to 1 years 3 months\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance('aboutXYears', years, localizeOptions);\n\n      // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance('overXYears', years, localizeOptions);\n\n      // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance('almostXYears', years + 1, localizeOptions);\n    }\n  }\n}","var defaultOptions = {};\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\nexport default function compareAsc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1;\n    // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import toDate from \"../toDate/index.js\";\nimport differenceInCalendarMonths from \"../differenceInCalendarMonths/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport isLastDayOfMonth from \"../isLastDayOfMonth/index.js\";\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates using trunc as a default rounding method.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\nexport default function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));\n  var result;\n\n  // Check for the difference of less than month\n  if (difference < 1) {\n    result = 0;\n  } else {\n    if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) {\n      // This will check if the date is end of Feb and assign a higher end of month date\n      // to compare it with Jan\n      dateLeft.setDate(30);\n    }\n    dateLeft.setMonth(dateLeft.getMonth() - sign * difference);\n\n    // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n    // If so, result must be decreased by 1 in absolute value\n    var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign;\n\n    // Check for cases of one full calendar month\n    if (isLastDayOfMonth(toDate(dirtyDateLeft)) && difference === 1 && compareAsc(dirtyDateLeft, dateRight) === 1) {\n      isLastMonthNotFull = false;\n    }\n    result = sign * (difference - Number(isLastMonthNotFull));\n  }\n\n  // Prevent negative zero\n  return result === 0 ? 0 : result;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\nexport default function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();\n  var monthDiff = dateLeft.getMonth() - dateRight.getMonth();\n  return yearDiff * 12 + monthDiff;\n}","import toDate from \"../toDate/index.js\";\nimport endOfDay from \"../endOfDay/index.js\";\nimport endOfMonth from \"../endOfMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * const result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\nexport default function isLastDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return endOfDay(date).getTime() === endOfMonth(date).getTime();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\nexport default function endOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport default function endOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getRoundingMethod } from \"../_lib/roundingMethods/index.js\";\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @param {Object} [options] - an object with options.\n * @param {String} [options.roundingMethod='trunc'] - a rounding method (`ceil`, `floor`, `round` or `trunc`)\n * @returns {Number} the number of seconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\nexport default function differenceInSeconds(dateLeft, dateRight, options) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dateLeft, dateRight) / 1000;\n  return getRoundingMethod(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\nexport default function differenceInMilliseconds(dateLeft, dateRight) {\n  requiredArgs(2, arguments);\n  return toDate(dateLeft).getTime() - toDate(dateRight).getTime();\n}","var roundingMap = {\n  ceil: Math.ceil,\n  round: Math.round,\n  floor: Math.floor,\n  trunc: function trunc(value) {\n    return value < 0 ? Math.ceil(value) : Math.floor(value);\n  } // Math.trunc is not supported by IE\n};\n\nvar defaultRoundingMethod = 'trunc';\nexport function getRoundingMethod(method) {\n  return method ? roundingMap[method] : roundingMap[defaultRoundingMethod];\n}","import defaultLocale from \"../../locale/en-US/index.js\";\nexport default defaultLocale;","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\nvar formatDistance = function formatDistance(token, count, options) {\n  var result;\n  var tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === 'string') {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace('{{count}}', count.toString());\n  }\n  if (options !== null && options !== void 0 && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n  return result;\n};\nexport default formatDistance;","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","export default function buildFormatLongFn(args) {\n  return function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // TODO: Remove String()\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\nvar formatRelative = function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n};\nexport default formatRelative;","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\nvar ordinalNumber = function ordinalNumber(dirtyNumber, _options) {\n  var number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  var rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n      case 2:\n        return number + 'nd';\n      case 3:\n        return number + 'rd';\n    }\n  }\n  return number + 'th';\n};\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function argumentCallback(quarter) {\n      return quarter - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, options) {\n    var context = options !== null && options !== void 0 && options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options !== null && options !== void 0 && options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n      var _width = options !== null && options !== void 0 && options.width ? String(options.width) : args.defaultWidth;\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n    // @ts-ignore: For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}","import buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nimport buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function valueCallback(value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function valueCallback(index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","export default function buildMatchFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n    if (!matchResult) {\n      return null;\n    }\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    }) : findKey(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    });\n    var value;\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}","export default function buildMatchPatternFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}","import assign from \"../assign/index.js\";\nexport default function cloneObject(object) {\n  return assign({}, object);\n}","export default function assign(target, object) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n  for (var property in object) {\n    if (Object.prototype.hasOwnProperty.call(object, property)) {\n      ;\n      target[property] = object[property];\n    }\n  }\n  return target;\n}","/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport default function getTimezoneOffsetInMilliseconds(date) {\n  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}","import { formatCurrency } from '../utilities/helpers';\r\n\r\nclass SummaryView {\r\n  _parentElement = document.querySelector('.summary');\r\n  income = document.getElementById('total-income');\r\n  expenses = document.getElementById('total-expenses');\r\n  netIncome = document.getElementById('total-netIncome');\r\n  netIncomeParagraph = document.getElementById('total-netIncome');\r\n\r\n  markup(data) {\r\n    return `<p>${data}</p>`;\r\n  }\r\n\r\n  renderSummary(data) {\r\n    const income = this.income;\r\n    const expenses = this.expenses;\r\n    const netIncome = this.netIncome;\r\n\r\n    const {\r\n      income: newIncome,\r\n      expenses: newExpenses,\r\n      netIncome: newNetIncome,\r\n    } = data();\r\n\r\n    income.textContent = formatCurrency(newIncome);\r\n    expenses.textContent = formatCurrency(newExpenses);\r\n    netIncome.textContent = formatCurrency(newNetIncome);\r\n  }\r\n\r\n  summaryDOMContentLoad(data) {\r\n    document.addEventListener('DOMContentLoaded', () => {\r\n      const income = this.income;\r\n      const expenses = this.expenses;\r\n      const netIncome = this.netIncome;\r\n\r\n      const {\r\n        income: newIncome,\r\n        expenses: newExpenses,\r\n        netIncome: newNetIncome,\r\n      } = data();\r\n\r\n      income.textContent = formatCurrency(newIncome);\r\n      expenses.textContent = formatCurrency(newExpenses);\r\n      netIncome.textContent = formatCurrency(newNetIncome);\r\n    });\r\n  }\r\n\r\n  clearSummary() {\r\n    this.income.textContent = formatCurrency(0);\r\n    this.expenses.textContent = formatCurrency(0);\r\n    this.netIncome.textContent = formatCurrency(0);\r\n  }\r\n}\r\n\r\nexport default new SummaryView();\r\n"],"names":["$f381a3c3b9cf5311$export$ca000e230c0caa3e","summary","income","expenses","netIncome","history","$f381a3c3b9cf5311$var$persistHistory","localStorage","setItem","JSON","stringify","$f381a3c3b9cf5311$var$persistSummary","$f381a3c3b9cf5311$export$f133bf94867451a9","$f381a3c3b9cf5311$export$37e4109464c1b57a","$f381a3c3b9cf5311$var$init","storage","getItem","parse","$c4f2b3ef7834f9d7$var$FormView","_parentElement","document","querySelector","date","amount","category","purpose","_reset","value","addFormEventHandler","action","renderSummary","renderHistory","addEventListener","e","preventDefault","submission","id","Date","toISOString","Math","random","args","$c4f2b3ef7834f9d7$export$2e2bcd8739ae039","$b8f57191916382d3$export$2e2bcd8739ae039","obj","Symbol","iterator","constructor","prototype","$377d1ce359384586$export$2e2bcd8739ae039","required","length","TypeError","$bce2d00733a79246$export$2e2bcd8739ae039","argument","arguments","argStr","Object","toString","call","getTime","console","warn","Error","stack","NaN","$9445ecc5e7cfb647$export$2e2bcd8739ae039","dirtyDate","setHours","$1f47e002602f8387$var$defaultOptions","$8a0cd77776020c49$export$2e2bcd8739ae039","dirtyDateLeft","dirtyDateRight","dateLeft","dateRight","diff","$c83d105896c1098b$var$roundingMap","ceil","round","floor","trunc","$1c4e78b8ee7f66d8$var$formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","$05b7040d79e43f9d$export$2e2bcd8739ae039","options","undefined","width","String","defaultWidth","formats","$b99de2b03d4f39be$var$formatLong","full","long","medium","short","time","dateTime","$117705cf2af2348d$var$formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","$eda89c8f88184c82$export$2e2bcd8739ae039","dirtyIndex","valuesArray","context","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","argumentCallback","$c309fdccb9ef673a$export$2e2bcd8739ae039","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","key","Array","isArray","$c309fdccb9ef673a$var$findIndex","array","predicate","pattern","test","$c309fdccb9ef673a$var$findKey","object","hasOwnProperty","valueCallback","rest","slice","$98e3d5324cb7d94c$export$2e2bcd8739ae039","code","formatDistance","token","count","result","tokenValue","replace","addSuffix","comparison","formatLong","formatRelative","_date","_baseDate","_options","localize","ordinalNumber","dirtyNumber","number","Number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parsePattern","parseInt","parseResult","any","index","weekStartsOn","firstWeekContainsDate","$4c58fe0eb0761e95$export$2e2bcd8739ae039","target","property","$6eb366e006a8b659$export$2e2bcd8739ae039","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","$d074305c0d005229$export$3dc27271f5d5c629","Intl","NumberFormat","style","currency","format","$d074305c0d005229$export$d07f57595c356899","str","stringArray","split","newArray","map","charAt","toUpperCase","toLowerCase","join","$3431b07ff50304ca$var$HistoryView","resetHistory","_markup","data","dateObj","dateLeftStartOfDay","dateRightStartOfDay","now","dirtyBaseDate","_ref","_options$locale","months","locale","defaultOptions","RangeError","isNaN","localizeOptions","Boolean","seconds","method","roundingMethod","minutes","includeSeconds","hours","days","sign","difference","abs","yearDiff","setDate","setMonth","isLastMonthNotFull","setFullYear","nearestMonth","monthsSinceStartOfYear","years","_errorMessage","message","insertAdjacentHTML","markupArray","errorElement","removeChild","newData","classList","remove","loadHistoryOnDOMLoad","stateArray","state","forEach","markup","clearRecords","action2","errorMessageElement","add","innerHTML","bind","$3431b07ff50304ca$export$2e2bcd8739ae039","$f43de15ef141a05e$var$SummaryView","getElementById","netIncomeParagraph","newIncome","newExpenses","newNetIncome","textContent","summaryDOMContentLoad","clearSummary","$f43de15ef141a05e$export$2e2bcd8739ae039","push","reduce","cur","sum","removeItem"],"version":3,"file":"index.ee056bfd.js.map"}